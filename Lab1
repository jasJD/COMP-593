{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled6.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMMbuD8UJpmBACxIN5Q0XMX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jasJD/COMP-593/blob/main/Lab1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qLIOdJgF3Zaa",
        "outputId": "4b72b3d4-69f2-4e59-e5f4-8563a94a757f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pyfiglet in /usr/local/lib/python3.7/dist-packages (0.8.post1)\n",
            "Select a font by typing its name: \n",
            " 1. puffy \n",
            " 2. alligator \n",
            " 3. fuzzy \n",
            " 4. slant \n",
            " 5. doh \n",
            " >>> doh\n",
            "Select the message you want to seekidan\n",
            "                                                                 \n",
            "                                       dddddddd                  \n",
            "kkkkkkkk             iiii              d::::::d                  \n",
            "k::::::k            i::::i             d::::::d                  \n",
            "k::::::k             iiii              d::::::d                  \n",
            "k::::::k                               d:::::d                   \n",
            " k:::::k    kkkkkkkiiiiiii     ddddddddd:::::d   aaaaaaaaaaaaa   \n",
            " k:::::k   k:::::k i:::::i   dd::::::::::::::d   a::::::::::::a  \n",
            " k:::::k  k:::::k   i::::i  d::::::::::::::::d   aaaaaaaaa:::::a \n",
            " k:::::k k:::::k    i::::i d:::::::ddddd:::::d            a::::a \n",
            " k::::::k:::::k     i::::i d::::::d    d:::::d     aaaaaaa:::::a \n",
            " k:::::::::::k      i::::i d:::::d     d:::::d   aa::::::::::::a \n",
            " k:::::::::::k      i::::i d:::::d     d:::::d  a::::aaaa::::::a \n",
            " k::::::k:::::k     i::::i d:::::d     d:::::d a::::a    a:::::a \n",
            "k::::::k k:::::k   i::::::id::::::ddddd::::::dda::::a    a:::::a \n",
            "k::::::k  k:::::k  i::::::i d:::::::::::::::::da:::::aaaa::::::a \n",
            "k::::::k   k:::::k i::::::i  d:::::::::ddd::::d a::::::::::aa:::a\n",
            "kkkkkkkk    kkkkkkkiiiiiiii   ddddddddd   ddddd  aaaaaaaaaa  aaaa\n",
            "                                                                 \n",
            "                                                                 \n",
            "                                                                 \n",
            "                                                                 \n",
            "                                                                 \n",
            "                                                                 \n",
            "                                                                 \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "nnnn  nnnnnnnn    \n",
            "n:::nn::::::::nn  \n",
            "n::::::::::::::nn \n",
            "nn:::::::::::::::n\n",
            "  n:::::nnnn:::::n\n",
            "  n::::n    n::::n\n",
            "  n::::n    n::::n\n",
            "  n::::n    n::::n\n",
            "  n::::n    n::::n\n",
            "  n::::n    n::::n\n",
            "  n::::n    n::::n\n",
            "  nnnnnn    nnnnnn\n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "                  \n",
            "\n"
          ]
        }
      ],
      "source": [
        "!pip install pyfiglet\n",
        "from pyfiglet import Figlet\n",
        "\n",
        "figlet = Figlet()\n",
        "\n",
        "\n",
        "selectedFont = input(\"Select a font by typing its name: \\n 1. puffy \\n 2. alligator \\n 3. fuzzy \\n 4. slant \\n 5. doh \\n >>> \")\n",
        "f = Figlet(font=selectedFont)\n",
        "selectedText = input(\"Select the message you want to see\")\n",
        "print(f.renderText(selectedText))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "3jq7UHkp74tw"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}